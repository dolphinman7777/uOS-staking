/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  StakingRewards,
  StakingRewardsInterface,
} from "../../contracts/StakingRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "RewardsDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getEarnedRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getStakedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsDuration",
        type: "uint256",
      },
    ],
    name: "setRewardsDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040526000600355600060045562093a806007553480156200002257600080fd5b5060405162001681380380620016818339810160408190526200004591620001af565b620000503362000142565b600180556002805460ff191690556001600160a01b038216620000c65760405162461bcd60e51b8152602060048201526024808201527f5374616b696e6720746f6b656e2063616e6e6f74206265207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b0381166200012a5760405162461bcd60e51b8152602060048201526024808201527f5265776172647320746f6b656e2063616e6e6f74206265207a65726f206164646044820152637265737360e01b6064820152608401620000bd565b6001600160a01b039182166080521660a052620001e7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620001aa57600080fd5b919050565b60008060408385031215620001c357600080fd5b620001ce8362000192565b9150620001de6020840162000192565b90509250929050565b60805160a05161145162000230600039600081816103810152818161069001526108400152600081816102c10152818161054a015281816109fd0152610bed01526114516000f3fe608060405234801561001057600080fd5b50600436106101ce5760003560e01c80637b0a47ee11610104578063cc1a378f116100a2578063df136d6511610071578063df136d65146103ab578063e9fad8ee146103b4578063ebe2b12b146103bc578063f2fde38b146103c557600080fd5b8063cc1a378f14610361578063cd3daf9d14610374578063d1af0c7d1461037c578063db2e21bc146103a357600080fd5b80638b876347116100de5780638b876347146103145780638da5cb5b14610334578063a694fc3a14610345578063c8f33c911461035857600080fd5b80637b0a47ee146102fb57806380faa57d146103045780638456cb591461030c57600080fd5b80633d18b912116101715780635c975abb1161014b5780635c975abb1461029e57806370a082311461023f578063715018a6146102b457806372f702f3146102bc57600080fd5b80633d18b9121461027b5780633f4ba83a146102835780634612bd4f1461028b57600080fd5b80632e1a7d4d116101ad5780632e1a7d4d14610221578063386a9525146102365780633a02a42d1461023f5780633c6b16ab1461026857600080fd5b80628cc262146101d35780630700037d146101f957806318160ddd14610219575b600080fd5b6101e66101e13660046112af565b6103d8565b6040519081526020015b60405180910390f35b6101e66102073660046112af565b60096020526000908152604090205481565b600b546101e6565b61023461022f3660046112df565b610455565b005b6101e660075481565b6101e661024d3660046112af565b6001600160a01b03166000908152600a602052604090205490565b6102346102763660046112df565b6105b4565b6102346107b1565b6102346108b2565b6101e66102993660046112af565b6108c2565b60025460ff1660405190151581526020016101f0565b6102346108cd565b6102e37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101f0565b6101e660045481565b6101e66108df565b6102346108f8565b6101e66103223660046112af565b60086020526000908152604090205481565b6000546001600160a01b03166102e3565b6102346103533660046112df565b610908565b6101e660055481565b61023461036f3660046112df565b610a57565b6101e6610afc565b6102e37f000000000000000000000000000000000000000000000000000000000000000081565b610234610b5d565b6101e660065481565b610234610c5b565b6101e660035481565b6102346103d33660046112af565b610d13565b6001600160a01b0381166000908152600960209081526040808320546008909252822054670de0b6b3a76400009061040e610afc565b610418919061130e565b6001600160a01b0385166000908152600a602052604090205461043b9190611321565b6104459190611338565b61044f919061135a565b92915050565b61045d610d89565b33610466610afc565b6006556104716108df565b6005556001600160a01b038116156104b85761048c816103d8565b6001600160a01b0382166000908152600960209081526040808320939093556006546008909152919020555b600082116105015760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b60448201526064015b60405180910390fd5b81600b6000828254610513919061130e565b9091555050336000908152600a60205260408120805484929061053790849061130e565b9091555061057190506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163384610de2565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a2506105b160018055565b50565b6105bc610e4a565b60006105c6610afc565b6006556105d16108df565b6005556001600160a01b03811615610618576105ec816103d8565b6001600160a01b0382166000908152600960209081526040808320939093556006546008909152919020555b60035442106106365760075461062e9083611338565b600455610678565b600042600354610646919061130e565b90506000600454826106589190611321565b600754909150610668828661135a565b6106729190611338565b60045550505b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156106df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610703919061136d565b9050600754816107139190611338565b60045411156107645760405162461bcd60e51b815260206004820152601860248201527f50726f76696465642072657761726420746f6f2068696768000000000000000060448201526064016104f8565b4260058190556007546107769161135a565b6003556040518381527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a1505050565b6107b9610d89565b336107c2610afc565b6006556107cd6108df565b6005556001600160a01b03811615610814576107e8816103d8565b6001600160a01b0382166000908152600960209081526040808320939093556006546008909152919020555b3360009081526009602052604090205480156108a5573360008181526009602052604081205561086f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169083610de2565b60405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869060200160405180910390a25b50506108b060018055565b565b6108ba610e4a565b6108b0610ea4565b600061044f826103d8565b6108d5610e4a565b6108b06000610ef6565b600060035442106108f1575060035490565b425b905090565b610900610e4a565b6108b0610f46565b610910610d89565b610918610f83565b33610921610afc565b60065561092c6108df565b6005556001600160a01b0381161561097357610947816103d8565b6001600160a01b0382166000908152600960209081526040808320939093556006546008909152919020555b600082116109b45760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b60448201526064016104f8565b81600b60008282546109c6919061135a565b9091555050336000908152600a6020526040812080548492906109ea90849061135a565b90915550610a2590506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085610fc9565b60405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200161059f565b610a5f610e4a565b6003544211610ac15760405162461bcd60e51b815260206004820152602860248201527f50726576696f7573207265776172647320706572696f64206d75737420626520604482015267636f6d706c65746560c01b60648201526084016104f8565b60078190556040518181527ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d39060200160405180910390a150565b6000600b54600003610b0f575060065490565b600b54600454600554610b206108df565b610b2a919061130e565b610b349190611321565b610b4690670de0b6b3a7640000611321565b610b509190611338565b6006546108f3919061135a565b610b65610d89565b610b6d611001565b336000908152600a602052604090205480610bc05760405162461bcd60e51b81526020600482015260136024820152724e6f7468696e6720746f20776974686472617760681b60448201526064016104f8565b80600b6000828254610bd2919061130e565b9091555050336000818152600a6020526040812055610c1c907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169083610de2565b60405181815233907f2e39961a70a10f4d46383948095ac2752b3ee642a7c76aa827410aaff08c2e519060200160405180910390a2506108b060018055565b336000908152600a602052604090819020549051632e1a7d4d60e01b815260048101919091523090632e1a7d4d90602401600060405180830381600087803b158015610ca657600080fd5b505af1158015610cba573d6000803e3d6000fd5b50505050306001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610cf957600080fd5b505af1158015610d0d573d6000803e3d6000fd5b50505050565b610d1b610e4a565b6001600160a01b038116610d805760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104f8565b6105b181610ef6565b600260015403610ddb5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104f8565b6002600155565b6040516001600160a01b038316602482015260448101829052610e4590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261104a565b505050565b6000546001600160a01b031633146108b05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f8565b610eac611001565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610f4e610f83565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610ed93390565b60025460ff16156108b05760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104f8565b6040516001600160a01b0380851660248301528316604482015260648101829052610d0d9085906323b872dd60e01b90608401610e0e565b60025460ff166108b05760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104f8565b600061109f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661111f9092919063ffffffff16565b90508051600014806110c05750808060200190518101906110c09190611386565b610e455760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104f8565b606061112e8484600085611136565b949350505050565b6060824710156111975760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104f8565b600080866001600160a01b031685876040516111b391906113cc565b60006040518083038185875af1925050503d80600081146111f0576040519150601f19603f3d011682016040523d82523d6000602084013e6111f5565b606091505b509150915061120687838387611211565b979650505050505050565b60608315611280578251600003611279576001600160a01b0385163b6112795760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104f8565b508161112e565b61112e83838151156112955781518083602001fd5b8060405162461bcd60e51b81526004016104f891906113e8565b6000602082840312156112c157600080fd5b81356001600160a01b03811681146112d857600080fd5b9392505050565b6000602082840312156112f157600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561044f5761044f6112f8565b808202811582820484141761044f5761044f6112f8565b60008261135557634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561044f5761044f6112f8565b60006020828403121561137f57600080fd5b5051919050565b60006020828403121561139857600080fd5b815180151581146112d857600080fd5b60005b838110156113c35781810151838201526020016113ab565b50506000910152565b600082516113de8184602087016113a8565b9190910192915050565b60208152600082518060208401526114078160408501602087016113a8565b601f01601f1916919091016040019291505056fea2646970667358221220f144be911c26b0c073a489b531ea72f7b79ce6d87afc0ea625c94b3e16b8d32b64736f6c63430008140033";

type StakingRewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingRewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingRewards__factory extends ContractFactory {
  constructor(...args: StakingRewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _stakingToken: AddressLike,
    _rewardsToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _stakingToken,
      _rewardsToken,
      overrides || {}
    );
  }
  override deploy(
    _stakingToken: AddressLike,
    _rewardsToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _stakingToken,
      _rewardsToken,
      overrides || {}
    ) as Promise<
      StakingRewards & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StakingRewards__factory {
    return super.connect(runner) as StakingRewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingRewardsInterface {
    return new Interface(_abi) as StakingRewardsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StakingRewards {
    return new Contract(address, _abi, runner) as unknown as StakingRewards;
  }
}
